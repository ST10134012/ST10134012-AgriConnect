
@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@using AgriConnect.WebApp.Components.Pages.Shared
@using System.Security.Claims
@using Microsoft.IdentityModel.JsonWebTokens
@inject AuthenticationStateProvider AuthenticationStateProvider
 
<!-- MainLayout.razor -->
<div class="flex h-screen">
    <!-- Sidebar -->
    <nav class="w-64 bg-primary text-white flex flex-col">
        <div class="flex items-center mt-4">
            <a href="/">
                <img src="logo.png" alt="Logo">
            </a> 
        </div> 
        <div class="flex-grow mt-4">
            <AuthorizeView Roles="@Roles.Employee">
                <Authorized>
                    <ul>
                        @* <li><a href="/employees" class="block py-2 px-4 hover:bg-secondary hover:text-primary">Employees</a></li> *@
                        <li><a href="/farmers" class="block py-2 px-4 hover:bg-secondary  hover:text-primary">Farmers</a></li>
                        <li><a href="/employee-products" class="block py-2 px-4 hover:bg-secondary  hover:text-primary">Products</a></li>
                    </ul>
                </Authorized>
            </AuthorizeView>
            
            <AuthorizeView Roles="@Roles.Farmer">
                <Authorized>
                    <ul>
                        <li><a href="/farmer-products" class="block py-2 px-4 hover:bg-secondary hover:text-primary">Products</a></li>
                        <li><a href="/forums" class="block py-2 px-4 hover:bg-secondary  hover:text-primary">Forums</a></li>
                    </ul>
                </Authorized>
            </AuthorizeView>
        </div>
        <div class="p-4"> 
            <button  class="bg-secondary w-full py-2 rounded text-green-900 font-bold">Logout</button>
        </div>
    </nav> 
    <!-- Main content -->
    <div class="flex-grow bg-gray-100">
        <nav class="bg-white shadow header flex items-center justify-between p-3">
            <!-- Left section -->
            <div class="flex items-center">
                <button class="side-bar-toggler mr-4">
                    <span class="material-symbols-outlined">menu</span>
                </button>
            </div>
            <!-- Right section -->
            <div class="flex items-center">
                <button class="mr-4">
                    <span class="material-symbols-outlined">notifications</span>
                </button>
                <!-- Profile dropdown -->
                <div class="relative ml-4">
                    <button id="profileDropdownButton" class="flex items-center focus:outline-none">
                        <img class="w-8 h-8 rounded-full" src="@photoUrl" alt="User Avatar">
                        <span class="ml-2 text-gray-700">User</span>
                        <span class="material-symbols-outlined ml-1">expand_more</span>
                    </button>
                    <!-- Dropdown menu -->
                    <div id="profileDropdownMenu" class="hidden absolute right-0 mt-2 w-48 bg-white border border-gray-200 rounded shadow-lg">
                        <a href="/profile" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">Profile</a>
                        <a href="/logout" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">Logout</a>
                    </div>
                </div>
            </div>
        </nav>
           
        <div class="p-5">
            @Body
        </div>
 
    </div>
</div>

<script>
    document.getElementById('profileDropdownButton').addEventListener('click', function() {
        var dropdownMenu = document.getElementById('profileDropdownMenu');
        dropdownMenu.classList.toggle('hidden');
    });

    window.addEventListener('click', function(e) {
   
        if (!document.getElementById('profileDropdownButton').contains(e.target)) {
            document.getElementById('profileDropdownMenu').classList.add('hidden');
        }
    });
</script>

@code
{

    private string photoUrl = "default-user.jpg";
    private string? userName = string.Empty;
    
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState?.User;
         
        if (user?.Identity?.IsAuthenticated == true)
        {
            photoUrl = user.Claims.FirstOrDefault(c => c.Type == "photUrl")?.Value ?? photoUrl;
            userName = user.Claims.FirstOrDefault(c => c.Type == JwtRegisteredClaimNames.GivenName)?.Value;
        }

    }

}
