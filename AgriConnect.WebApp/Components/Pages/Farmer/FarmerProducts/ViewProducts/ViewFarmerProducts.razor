@page "/farmer-products"
@using AgriConnect.WebApp.Components.Layout
@using Microsoft.IdentityModel.JsonWebTokens
@using AgriConnect.Application.Products.ViewProducts.Farmer
@using AgriConnect.Domain.Products
@using AgriConnect.Domain.Users
@using AgriConnect.WebApp.Components.Pages.Shared
@using Microsoft.AspNetCore.Authorization
@layout DashboardLayout
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ISender sender
@rendermode InteractiveServer
@attribute [Authorize (Roles = Roles.Farmer)]

<div>
    <div>
        <h1 class="text-primary text-2xl font-bold">Products</h1>
    </div>
</div>

<div class="card shadow-lg bg-white mt-5 p-5">
    <div class="card-body">
        <button @onclick="UpdateHeading" class="bg-primary px-4 py-2 rounded mr-3 text-white flex items-center">
            <span class="material-symbols-outlined">add</span>
            Add product
        </button>
    </div>
</div>

<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mt-5">
    @foreach (var product in Products)
    {
        <div class="border rounded shadow-lg overflow-hidden">
            @if (product.Photo != null)
            {
                <img src="@product.Photo.Value" alt="@product.Name" class="w-full h-48 object-cover" />
            }
            <div class="p-4">
                <h2 class="text-lg font-semibold">@product.Name.Value</h2>
                <p class="text-gray-600">@product.ProductionDateUtc.ToString("yyyy-MM-dd")</p>
            </div>
        </div>
    }
</div>

@code {
    public List<Product> Products { get; set; } = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState?.User;
        if (user?.Identity?.IsAuthenticated == true)
        {
            var sub = user.Claims.FirstOrDefault(c => c.Type == JwtRegisteredClaimNames.Sub)?.Value;
            if (Guid.TryParse(sub, out var userId))
            {
                var query = new ViewProductsAsFarmerQuery(userId);
                var data = await sender.Send(query);
                Products = data.Value.Products.ToList();
            }
        }
    }

    private void UpdateHeading()
    {
        navigationManager.NavigateTo("/farmer-products/add-product");
    }
}
